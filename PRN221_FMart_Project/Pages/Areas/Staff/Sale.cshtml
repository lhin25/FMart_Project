@page
@model PRN221_FMart_Project.Pages.Areas.Staff.SaleModel
@{

}

<div class="header-bar">
    <i class='bx bxs-info-circle'></i>
    Overview
</div>

<div class="salebox">
    <div class="row full-height">
        <div class="col-lg-9 card full-height">

            <div class="product-field">
                <input id="product-list" type="hidden" value="@ViewBag.ProductList" />
                <div class="search-product card">
                    <input type="text" autocomplete="off" class="form-control" id="barcode" value="" placeholder="Enter Barcode to find goods" data-toggle="tooltip" data-placement="top" title="Search">
                </div>
                <div class="product-list">
                    @if (Model.Products.Items != null || Model.Products.Items.Any())
                    {
                        <div class="row">
                            @foreach (var item in Model.Products.Items)
                            {
                                <div class="col-lg-2 col-md-2">
                                    <div class="product-wrapper" id="@item.ProductId">
                                        <div class="product-img">
                                            @{
                                                var proImg = string.IsNullOrEmpty(item.ProductImg) ? "/img/empty.png" : item.ProductImg;
                                            }
                                            <img src="@proImg" />
                                        </div>
                                        <div class="product-content">
                                            <span class="product-name">
                                                @Html.DisplayFor(modelItem => item.ProductName)
                                            </span>
                                            <input class="product-price" type="hidden" value="@item.RetailPrice" />
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <img class="empty-list" src="~/img/empty-list.svg" />
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-3 card full-height">
            <div class="customer-field">
                <input id="customer-list" type="hidden" value="@ViewBag.CustomerList" />
                <div class="customer-search">
                    <input type="text" autocomplete="off" class="form-control" id="customer" value="" placeholder="Enter Phone number to search" data-toggle="tooltip" data-placement="top" title="Search">
                </div>
                <div class="customer-new">
                    <button type="button" id="btn-add-customer" data-bs-toggle="modal"
                            data-bs-target="#newCustomerModal">
                        <i class='bx bx-add-to-queue'></i>
                    </button>
                </div>
            </div>
            <form method="post" class="full-height" asp-page-handler="Checkout">
                <div class="cart">
                    <div class="cart-customer" id="customerInfo" style="display: none">
                    </div>
                    <div class="cart-items">
                        <div class="cart-container">
                        </div>
                    </div>
                    <div class="cart-summary">
                    </div>
                    <div class="cart-payment">
                        <input type="hidden" class="cart-all" asp-for="@Model.CartContainer"/>
                        <button style="width: 100%" type="submit" id="checkoutBtn" class="btn btn-primary" disabled>Checkout</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="newCustomerModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="customerModalLabel">New Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="orderForm" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="fullName" class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="fullName" name="fullName" required>
                        <label for="phoneNumber" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="phoneNumber" name="phoneNumber" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-outline-success" id="newCustomerBtn">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var cart = { Items: [], CustomerId: '', Total: 0 };
        let inputCart = document.querySelector('input.cart-all');
        var products = document.querySelectorAll('.product-wrapper');
        products.forEach(pro => {
            pro.addEventListener("click", (e) => {
                let proItem = e.currentTarget;
                let proName = proItem.querySelector('.product-name').textContent.trim();
                let proPrice = parseFloat(proItem.querySelector('.product-price').value);
                let findItem = cart.Items.find(i => i.ProductId === proItem.id);
                if (findItem !== undefined) {
                    cart.Items[cart.Items.indexOf(findItem)].Quantity += 1;
                } else {
                    cart.Items.push({ ProductId: proItem.id, ProductName: proName, UnitPrice: proPrice, Quantity: 1 });
                }
                var totl = 0;
                cart.Items.forEach(item => {
                    totl += item.UnitPrice * item.Quantity;
                });
                cart.Total = totl;
                let cartText = JSON.stringify(cart);
                inputCart.value = cartText;
                inputCart.dispatchEvent(new Event('change'));
            });
        });

        var checkoutBtn = document.querySelector('#checkoutBtn');

        inputCart.addEventListener("change", (e) => {
            let cartContainer = document.querySelector('.cart-container');
            cartContainer.innerHTML = "";
            cart.Items.forEach(item => {
                let price = item.UnitPrice;
                let total = price * item.Quantity;

                cartContainer.innerHTML += `
                                                                                    <div class="cart-item">
                                                                                                        <div class="item-index">
                                                                                                            <span>${cart.Items.indexOf(item) + 1}</span>
                                                                                                        </div>
                                                                                                        <div class="item-info">
                                                                                                            <div class="item-name">
                                                                                                                <p>${item.ProductName}</p>
                                                                                                            </div>
                                                                                                            <p>${formatCurrency(price)}đ</p>
                                                                                                        </div>
                                                                                                        <div class="item-quantity">
                                                                                                            <a class="minus"><i class='bx bx-minus'></i></a>
                                                                                                            <input type="number" value="${item.Quantity}" readonly />
                                                                                                            <a class="plus"><i class='bx bx-plus'></i></a>
                                                                                                        </div>
                                                                                                        <div class="item-total">
                                                                                                                    <span>${formatCurrency(total)}đ</span>
                                                                                                        </div>
                                                                                                        <div class="item-action">
                                                                                                            <a class="remove">
                                                                                                                <i class='bx bx-trash'></i>
                                                                                                            </a>
                                                                                                        </div>
                                                                                                    </div>
                                                                            `;
            });
            if (cart.Items.length > 0 && checkoutBtn.hasAttribute("disabled")) {
                checkoutBtn.removeAttribute("disabled");
            }
        });

        var searchCustomer = document.querySelector('input#customer');
        var customerList = JSON.parse(document.querySelector('#customer-list').value);
        searchCustomer.addEventListener("input", (e) => {
            let elm = e.target;
            var a, b, i, val = elm.value;

            closeAllLists();
            if (!val) {
                return false;
            }
            currentFocus = -1;
            a = document.createElement("DIV");
            a.setAttribute("id", elm.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");
            elm.parentNode.appendChild(a);
            s = document.createElement("DIV");
            for (i = 0; i < customerList.length; i++) {
                let cid = customerList[i].CustomerId;
                let phone = customerList[i].PhoneNumber;
                let nae = customerList[i].FullName;
                let points = customerList[i].Points;
                if (phone.substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                    b = document.createElement("DIV");
                    b.innerHTML = "<strong>" + phone.substr(0, val.length) + "</strong>";
                    b.innerHTML += phone.substr(val.length);
                    b.innerHTML += "<input type='hidden' value='" + phone + "'>";
                    b.addEventListener("click", function (e) {
                        loadCustomer(cid, nae, phone, points);
                        closeAllLists();
                    });
                    a.appendChild(b);
                }
            }
        });

        function loadCustomer(id, name, phon, point) {
            let customerField = document.querySelector('.cart-customer');
            customerField.style.display = 'flex';
            let inputCustomerId = document.querySelector('input#invoice-customer');
            customerField.innerHTML = `<div class="customer-info">
                                            <p class="customer-full-name">${name}</p>
                                            <p>
                                                <span class="customer-phone">${phon} </span> |
                                                <span class="customer-point">${point} points</span>
                                            </p>
                                        </div>
                                        <a class="customer-remove" onclick=removeCustomer()><i class='bx bx-x'></i></a>`;
            var invoiceCust = document.querySelector('#invoice-customer');
            invoiceCust.value = id;
            cart.CustomerId = id;
            let cartText = JSON.stringify(cart);
            inputCart.value = cartText;
        };

        function removeCustomer() {
            let customerField = document.querySelector('.cart-customer');
            customerField.style.display = 'none';
            customerField.innerHTML = ``;
            var invoiceCust = document.querySelector('#invoice-customer');
            invoiceCust.value = '';
            cart.CustomerId = '';
            let cartText = JSON.stringify(cart);
            inputCart.value = cartText;
        }

        function closeAllLists(elmnt) {
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != searchCustomer) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });
        };


    </script>
}